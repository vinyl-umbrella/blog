---
import { formatDate } from '../utils/util';
import type { CollectionEntry } from 'astro:content';

interface Props {
  slug: string;
  z: CollectionEntry<'blog'>['data'];
}

const { slug, z } = Astro.props;
---

<div>
  <article class='content'>
    <div class='info'>
      <div class='sub'>
        {formatDate(z.pubDate)}
        {z.updatedDate && ` (↻${formatDate(z.updatedDate)}更新)`}
      </div>
      <a href={`/blog/${slug}/`} aria-label={z.title}>
        <h2>{z.title}</h2>
      </a>
      <div class='sub'>
        {
          z.description.length < 50
            ? z.description
            : z.description.slice(0, 100) + '...'
        }
      </div>
      <div class='sub'>
        {
          z.tags.map((tag) => (
            <a href={`/tags/${tag}/`} class='tag'>
              #{tag}{' '}
            </a>
          ))
        }
      </div>
    </div>
  </article>
</div>

<style>
  .content {
    display: flex;
    margin: 1em 0;
    background-color: var(--color-gray-700);
    border-radius: 0.5em;
    padding: 0.75em;

    .info {
      padding-left: 0.75em;

      /* article title */
      a {
        text-decoration: none;
        color: inherit;

        h2:hover {
          color: var(--accent);
          text-decoration: underline;
        }
      }

      .sub {
        margin-top: 0.5em;
        line-height: 1.2em;
        color: rgba(200, 206, 217, 0.8);

        a {
          color: rgba(200, 206, 217, 0.9);
          &:hover {
            color: var(--accent);
          }
        }
      }
    }
  }
</style>
